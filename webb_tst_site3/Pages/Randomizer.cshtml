@page
@model webb_tst_site3.Pages.RandomizerModel
@{
    ViewData["Title"] = "Генератор рун";
}

<div class="container mt-5">
    <div class="text-center">
        <h1 class="display-4 mb-4">Генератор рун</h1>

        <div class="card shadow-sm mx-auto mb-4" style="max-width: 600px;">
            <div class="card-body">
                <h5 class="card-title">Задайте вопрос и выберите сферу</h5>
                <textarea id="questionInput" class="form-control mb-3" rows="3" placeholder="Введите ваш вопрос..."></textarea>

                <select id="sphereSelect" class="form-select mb-4">
                    <option value="">Все сферы</option>
                    @foreach (var sphere in Model.Spheres)
                    {
                        <option value="@sphere.Id">@sphere.Name</option>
                    }
                </select>

                <button id="generateBtn" class="btn btn-primary btn-lg w-100">
                    <i class="fas fa-random me-2"></i>Получить ответ (3 руны)
                </button>

                <button id="dailyRuneBtn" class="btn btn-info btn-lg w-100 mt-3">
                    <i class="fas fa-calendar-day me-2"></i>Руна дня
                </button>
            </div>
        </div>

        <div id="loading" class="text-center my-4" style="display: none;">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Загрузка...</span>
            </div>
            <p class="mt-2">Генерация руны...</p>
        </div>

        <div id="result" class="row justify-content-center"></div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const generateBtn = document.getElementById('generateBtn');
            const dailyRuneBtn = document.getElementById('dailyRuneBtn');
            const questionInput = document.getElementById('questionInput');
            const resultDiv = document.getElementById('result');
            const loadingDiv = document.getElementById('loading');
            const sphereSelect = document.getElementById('sphereSelect');

            generateBtn.addEventListener('click', async function () {
                await getRunes(3);
            });

            dailyRuneBtn.addEventListener('click', async function () {
                await getRunes(1, true);
            });
            async function getRunes(count, isDaily = false) {
                const question = questionInput.value.trim();
                const sphereId = sphereSelect.value; // Получаем выбранную сферу

                if (!isDaily && !question) {
                    alert('Пожалуйста, введите ваш вопрос');
                    return;
                }

                // Блокируем элементы управления
                generateBtn.disabled = true;
                dailyRuneBtn.disabled = true;
                if (sphereSelect) sphereSelect.disabled = true;
                resultDiv.innerHTML = '';
                loadingDiv.style.display = 'block';

                try {
                    let url = isDaily
                        ? '/api/runes/random?sphereId=4'
                        : `/api/runes/random?count=${count}`;

                    // Добавляем sphereId к запросу, если он выбран и это не руна дня
                    if (!isDaily && sphereId) {
                        url += `&sphereId=${sphereId}`;
                    }

                    const response = await fetch(url);

                    if (!response.ok) {
                        const error = await response.text();
                        throw new Error(error || 'Ошибка при загрузке данных');
                    }

                    const data = await response.json();

                    if (isDaily) {
                        renderRune(data, question, true);
                    } else {
                        if (Array.isArray(data)) {
                            resultDiv.innerHTML = `
                            <div class="col-12">
                                <h3 class="text-center mb-4">Ответ на ваш вопрос:</h3>
                                <p class="text-center text-muted mb-4">"${question}"</p>
                                <div class="row">
                                    ${data.map(rune => renderRuneHtml(rune, question)).join('')}
                                </div>
                            </div>
                        `;
                        } else {
                            renderRune(data, question);
                        }
                    }
                } catch (error) {
                    console.error('Ошибка:', error);
                    resultDiv.innerHTML = `
                    <div class="col-md-8">
                        <div class="alert alert-danger">
                            Ошибка: ${error.message}
                        </div>
                        <button class="btn btn-warning w-100" onclick="window.location.reload()">
                            <i class="fas fa-sync-alt me-2"></i>Попробовать снова
                        </button>
                    </div>
                `;
                } finally {
                    loadingDiv.style.display = 'none';
                    generateBtn.disabled = false;
                    dailyRuneBtn.disabled = false;
                    if (sphereSelect) sphereSelect.disabled = false;
                }
            }

            function renderRune(runeData, question, isDaily = false) {
                resultDiv.innerHTML = renderRuneHtml(runeData, question, isDaily);
            }

            function renderRuneHtml(runeData, question, isDaily = false) {
                return `
                            <div class="col-md-${isDaily ? '12' : '4'} mb-4">
                                <div class="card shadow h-100">
                                    <div class="card-header ${isDaily ? 'bg-warning' : 'bg-primary'} text-white">
                                        <h3 class="text-center">${runeData.name}${isDaily ? ' (Руна дня)' : ''}</h3>
                                    </div>
                                    <div class="card-body text-center">
                                        ${!isDaily && question ? `<p class="text-muted mb-4">${question}</p>` : ''}
                                        <img src="${runeData.imageUrl || '/images/default-rune.png'}"
                                             class="img-fluid my-3"
                                             style="max-height: 200px;"
                                             onerror="this.src='/images/default-rune.png'">
                                        <div class="card-text">${(runeData.description || '').replace(/\n/g, '<br>')}</div>
                                        ${runeData.sphereName ? `<div class="text-muted mt-2">Сфера: ${runeData.sphereName}</div>` : ''}
                                    </div>
                                </div>
                            </div>
                        `;
            }
        });
    </script>
}