CREATE DATABASE rune_randomizer;
USE rune_randomizer;

-- Таблица пользователей
CREATE TABLE Users (
    Id INT AUTO_INCREMENT PRIMARY KEY,
    Username VARCHAR(50) NOT NULL UNIQUE,
    PasswordHash VARCHAR(255) NOT NULL,
    Role ENUM('User', 'Admin') NOT NULL DEFAULT 'User',
    CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Таблица сфер
CREATE TABLE Spheres (
    Id INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Description TEXT,
    ImageUrl VARCHAR(255),
    CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt DATETIME ON UPDATE CURRENT_TIMESTAMP
);

-- Таблица рун
CREATE TABLE Runes (
    Id INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    BaseDescription TEXT,
    ImageUrl VARCHAR(255),
    CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt DATETIME ON UPDATE CURRENT_TIMESTAMP
);

-- Таблица связей рун и сфер (описания рун для каждой сферы)
CREATE TABLE RuneSphereDescriptions (
    Id INT AUTO_INCREMENT PRIMARY KEY,
    RuneId INT NOT NULL,
    SphereId INT NOT NULL,
    Description TEXT NOT NULL,
    FOREIGN KEY (RuneId) REFERENCES Runes(Id) ON DELETE CASCADE,
    FOREIGN KEY (SphereId) REFERENCES Spheres(Id) ON DELETE CASCADE,
    UNIQUE KEY (RuneId, SphereId)
);

-- Добавляем администратора по умолчанию
INSERT INTO Users (Username, PasswordHash, Role) 
VALUES ('admin', '$2a$11$NtQYHX7U3vQwRL0yZ1qZ.uWjQ9J9zQD5Jd5s5Y5Y5Y5Y5Y5Y5Y5Y5Y', 'Admin');
-- Пароль: admin123


-- Таблица квизов
CREATE TABLE Quizzes (
    Id INT AUTO_INCREMENT PRIMARY KEY,
    Title VARCHAR(100) NOT NULL,
    Description TEXT,
    CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt DATETIME ON UPDATE CURRENT_TIMESTAMP
);

-- Таблица вопросов (с поддержкой порядка)
CREATE TABLE Questions (
    Id INT AUTO_INCREMENT PRIMARY KEY,
    QuizId INT NOT NULL,
    Text TEXT NOT NULL,
    `Order` INT NOT NULL DEFAULT 0, -- Для сортировки
    FOREIGN KEY (QuizId) REFERENCES Quizzes(Id) ON DELETE CASCADE
);

-- Таблица возможных результатов (например, "Персефона", "Артемида")
CREATE TABLE Results (
    Id INT AUTO_INCREMENT PRIMARY KEY,
    QuizId INT NOT NULL,
    Name VARCHAR(100) NOT NULL,
    Description TEXT NOT NULL,
    ImageUrl VARCHAR(255),
    FOREIGN KEY (QuizId) REFERENCES Quizzes(Id) ON DELETE CASCADE
);

-- Таблица ответов (связь с вопросами и результатами)
CREATE TABLE Answers (
    Id INT AUTO_INCREMENT PRIMARY KEY,
    QuestionId INT NOT NULL,
    Text TEXT NOT NULL,
    ResultId INT NOT NULL, -- Какой результат даёт этот ответ
    Score INT DEFAULT 1, -- Баллы за ответ (можно менять вес)
    FOREIGN KEY (QuestionId) REFERENCES Questions(Id) ON DELETE CASCADE,
    FOREIGN KEY (ResultId) REFERENCES Results(Id) ON DELETE CASCADE
);

ALTER TABLE Quizzes ADD COLUMN IsPublished BOOLEAN NOT NULL DEFAULT TRUE;

-- Таблица групп настроек (для логического группирования)
CREATE TABLE SettingGroups (
    Id INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Description TEXT,
    `Order` INT DEFAULT 0,
    CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Таблица настроек сайта
CREATE TABLE SiteSettings (
    Id INT AUTO_INCREMENT PRIMARY KEY,
    GroupId INT,
    Name VARCHAR(100) NOT NULL UNIQUE,
    DisplayName VARCHAR(100) NOT NULL,
    Value TEXT,
    DefaultValue TEXT,
    DataType ENUM('string', 'number', 'boolean', 'color', 'image', 'text', 'html', 'json') NOT NULL,
    Description TEXT,
    IsPublic BOOLEAN DEFAULT TRUE, -- Можно ли использовать на клиенте
    Editable BOOLEAN DEFAULT TRUE, -- Можно ли редактировать
    `Order` INT DEFAULT 0,
    CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt DATETIME ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (GroupId) REFERENCES SettingGroups(Id) ON DELETE SET NULL
);

-- Таблица истории изменений настроек (аудит)
CREATE TABLE SettingHistory (
    Id INT AUTO_INCREMENT PRIMARY KEY,
    SettingId INT NOT NULL,
    OldValue TEXT,
    NewValue TEXT,
    ChangedBy INT NOT NULL,
    ChangedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (SettingId) REFERENCES SiteSettings(Id) ON DELETE CASCADE,
    FOREIGN KEY (ChangedBy) REFERENCES Users(Id) ON DELETE CASCADE
);